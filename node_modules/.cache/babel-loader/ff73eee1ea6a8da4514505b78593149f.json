{"ast":null,"code":"var _jsxFileName = \"/workspace/teamplate-react-app-ts-sass/src/components/Notification/Banner.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as actionsNotification from 'store/actions/notification';\nimport IconXCircle from 'svgs/basic/IconXCircle';\nimport IconSuccess from 'svgs/notification/IconSuccess';\nimport IconHint from 'svgs/notification/IconHint';\nimport IconError from 'svgs/notification/IconError';\nimport IconWarning from 'svgs/notification/IconWarning'; //import IconBanner from 'svgs/basic/IconBanner';\n\nimport * as Styled from './Banner_Styled';\n\nfunction Banner({\n  banner\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const onClick_DeleteBanner = useCallback(id => {\n    dispatch(actionsNotification.return__DELETE_BANNER({\n      id: id\n    }));\n  }, []);\n  const propsIconSituation = useMemo(() => {\n    return {\n      width: '24px',\n      height: '24px',\n      listKeyTheme: ['color', 'Notification', `banner___icon__${banner['kindSituation']}`],\n      className: banner['kindSituation'],\n      kind: 'regular'\n    };\n  }, []);\n  console.log(banner);\n  return /*#__PURE__*/React.createElement(Styled.Div__Banner, {\n    className: banner['kindSituation'],\n    kindSituation: banner['kindSituation'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, banner['kindSituation'] === 'success' && /*#__PURE__*/React.createElement(IconSuccess, Object.assign({}, propsIconSituation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 52\n    }\n  })), banner['kindSituation'] === 'hint' && /*#__PURE__*/React.createElement(IconHint, Object.assign({}, propsIconSituation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  })), banner['kindSituation'] === 'error' && /*#__PURE__*/React.createElement(IconError, Object.assign({}, propsIconSituation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 50\n    }\n  })), banner['kindSituation'] === 'warning' && /*#__PURE__*/React.createElement(IconWarning, Object.assign({}, propsIconSituation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 52\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \" \", banner['message'], \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Button__Banner_Delete, {\n    onClick: () => onClick_DeleteBanner(banner['id']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconXCircle, {\n    width: '20px',\n    height: '20px',\n    listKeyTheme: ['colors', 'Notification', `banner___icon__${banner['kindSituation']}`],\n    className: banner['kindSituation'],\n    kind: 'light',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconXCircle, {\n    width: '20px',\n    height: '20px',\n    listKeyTheme: ['colors', 'Notification', `banner___icon__${banner['kindSituation']}`],\n    className: banner['kindSituation'],\n    kind: 'solid',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(Banner, \"SQrpBNT5QQVxL+Lf5RwvdOlWz0Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Banner;\nBanner.defaultProps = {};\nexport default Banner;\n/*\n전체 요소들이 리렌더링 되면 그 요소의 애니메이션이 없어지는 \n\n<Styled.Div__Banner_Guage\n        className={banner['situation']}\n        banner={banner}\n      />\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/components/Notification/Banner.tsx"],"names":["React","useCallback","useMemo","useDispatch","actionsNotification","IconXCircle","IconSuccess","IconHint","IconError","IconWarning","Styled","Banner","banner","dispatch","onClick_DeleteBanner","id","return__DELETE_BANNER","propsIconSituation","width","height","listKeyTheme","className","kind","console","log","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useEffect } from \"react\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {StateRoot} from 'store/reducers';\nimport * as actionsNotification from 'store/actions/notification';\n\nimport {Banner as TypeBanner} from 'store/reducers/notification';\n\nimport IconXCircle from 'svgs/basic/IconXCircle';\n\nimport IconSuccess from 'svgs/notification/IconSuccess';\nimport IconHint from 'svgs/notification/IconHint';\nimport IconError from 'svgs/notification/IconError';\nimport IconWarning from 'svgs/notification/IconWarning';\n\n\n//import IconBanner from 'svgs/basic/IconBanner';\n\nimport * as Styled from './Banner_Styled';\n\n\ntype PropsBanner = {\n  banner: TypeBanner\n};\n\n\nfunction Banner({\n  banner\n}: PropsBanner) {\n  \n  const dispatch = useDispatch();\n  \n  const onClick_DeleteBanner = useCallback(\n    (id:string) => {\n      dispatch(actionsNotification.return__DELETE_BANNER({\n        id: id\n      }) )\n    }, []\n  );\n  \n  \n  const propsIconSituation = useMemo( (): any => {\n    return ({\n      width: '24px',\n      height:'24px',\n      listKeyTheme: ['color', 'Notification', `banner___icon__${banner['kindSituation']}`],\n      className: banner['kindSituation'],\n      kind: 'regular'  \n    })\n  }, []);\n\n  console.log(banner);\n  \n  return (\n    <Styled.Div__Banner\n      className={banner['kindSituation']}\n      kindSituation={banner['kindSituation']}\n    >\n      <div>\n        {banner['kindSituation'] === 'success' &&  <IconSuccess {...propsIconSituation} /> }\n        {banner['kindSituation'] === 'hint' &&  <IconHint {...propsIconSituation} /> }\n        {banner['kindSituation'] === 'error' &&  <IconError {...propsIconSituation} /> }\n        {banner['kindSituation'] === 'warning' &&  <IconWarning {...propsIconSituation} /> }\n      </div>\n        \n      <div> {banner['message']} </div>\n      \n      <div> \n        <Styled.Button__Banner_Delete\n          onClick={()=>onClick_DeleteBanner(banner['id'])}\n        >  \n          <IconXCircle \n            width={'20px'} \n            height={'20px'} \n            listKeyTheme={['colors', 'Notification', `banner___icon__${banner['kindSituation']}`]}\n            className={banner['kindSituation']}\n            kind={'light'}\n          />\n          <IconXCircle \n            width={'20px'} \n            height={'20px'} \n            listKeyTheme={['colors', 'Notification', `banner___icon__${banner['kindSituation']}`]}\n            className={banner['kindSituation']}\n            kind={'solid'}\n          />\n        </Styled.Button__Banner_Delete>\n      </div>\n      \n      \n      \n    </Styled.Div__Banner>\n  );\n}\n\nBanner.defaultProps = {\n  \n};\n\nexport default Banner;\n\n\n/*\n전체 요소들이 리렌더링 되면 그 요소의 애니메이션이 없어지는 \n\n<Styled.Div__Banner_Guage\n        className={banner['situation']}\n        banner={banner}\n      />\n*/"]},"metadata":{},"sourceType":"module"}