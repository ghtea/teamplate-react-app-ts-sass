{"ast":null,"code":"//const department: string = 'status';\nexport const name__REPLACE = `status/REPLACE`; // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\nexport const return__REPLACE = payload => {\n  return {\n    type: name__REPLACE,\n    payload: payload\n  };\n};\n\n/*\ntype typeAction =\n  | ReturnType<typeof increase>\n  | ReturnType<typeof decrease>\n  | ReturnType<typeof increaseBy>;\n  */\n// typescript 안의 type 과 redux 의 type 구분 주의!\nexport const name__CHANGE_LANGUAGE = `status/CHANGE_LANGUAGE`; // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\nexport const return__CHANGE_LANGUAGE = payload => {\n  return {\n    type: name__CHANGE_LANGUAGE,\n    payload: payload\n  };\n};\nexport const name__READ_OPTION_THEME = `status/READ_OPTION_THEME`; // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\nexport const return__READ_OPTION_THEME = () => {\n  return {\n    type: name__READ_OPTION_THEME\n  };\n};\nexport const name__DECIDE_THEME = `status/DECIDE_THEME`;\nexport const return__DECIDE_THEME = () => {\n  return {\n    type: name__DECIDE_THEME\n  };\n};\nexport const name__READ_LANGUAGE = `status/READ_LANGUAGE`;\nexport const return__READ_LANGUAGE = () => {\n  return {\n    type: name__READ_LANGUAGE\n  };\n};","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/actions/status.ts"],"names":["name__REPLACE","return__REPLACE","payload","type","name__CHANGE_LANGUAGE","return__CHANGE_LANGUAGE","name__READ_OPTION_THEME","return__READ_OPTION_THEME","name__DECIDE_THEME","return__DECIDE_THEME","name__READ_LANGUAGE","return__READ_LANGUAGE"],"mappings":"AAAA;AAGA,OAAO,MAAMA,aAAqB,GAAI,gBAA/B,C,CAAmD;;AAO1D,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAA+B;AAC1D,SAAO;AACHC,IAAAA,IAAI,EAAEH,aADH;AAEHE,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;;AASP;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,OAAO,MAAME,qBAA6B,GAAI,wBAAvC,C,CAAmE;;AAM1E,OAAO,MAAMC,uBAAuB,GAAIH,OAAD,IAAwC;AAC3E,SAAO;AACHC,IAAAA,IAAI,EAAEC,qBADH;AAEHF,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAYP,OAAO,MAAMI,uBAA+B,GAAI,0BAAzC,C,CAAuE;;AAE9E,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAO;AACHJ,IAAAA,IAAI,EAAEG;AADH,GAAP;AAGH,CAJM;AAUP,OAAO,MAAME,kBAA0B,GAAI,qBAApC;AAEP,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHN,IAAAA,IAAI,EAAEK;AADH,GAAP;AAGH,CAJM;AAUP,OAAO,MAAME,mBAA2B,GAAI,sBAArC;AAEP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHR,IAAAA,IAAI,EAAEO;AADH,GAAP;AAGH,CAJM","sourcesContent":["//const department: string = 'status';\n\n\nexport const name__REPLACE: string = `status/REPLACE`;    // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\ninterface Payload__REPLACE {\n    listKey: (string | number)[];\n    replacement: any;\n}\n\nexport const return__REPLACE = (payload: Payload__REPLACE) => {    \n    return {\n        type: name__REPLACE,\n        payload: payload\n    }\n};\n\nexport type type__REPLACE = ReturnType<typeof return__REPLACE>;\n\n/*\ntype typeAction =\n  | ReturnType<typeof increase>\n  | ReturnType<typeof decrease>\n  | ReturnType<typeof increaseBy>;\n  */\n// typescript 안의 type 과 redux 의 type 구분 주의!\n\n\n\nexport const name__CHANGE_LANGUAGE: string = `status/CHANGE_LANGUAGE`;    // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\ninterface Payload__CHANGE_LANGUAGE {\n    replacement: string;\n}\n\nexport const return__CHANGE_LANGUAGE = (payload?: Payload__CHANGE_LANGUAGE) => {    \n    return {\n        type: name__CHANGE_LANGUAGE,\n        payload: payload\n    }\n};\n\nexport type type__CHANGE_LANGUAGE = ReturnType<typeof return__CHANGE_LANGUAGE>;\n\n\n\n\nexport const name__READ_OPTION_THEME: string = `status/READ_OPTION_THEME`;    // 뒤에 as const 를 붙이면 reducer 에서 status.REPLACE 로 쓸때 오류 뜬다. 아직 이해못\n\nexport const return__READ_OPTION_THEME = () => {    \n    return {\n        type: name__READ_OPTION_THEME\n    }\n};\n\nexport type type__READ_OPTION_THEME = ReturnType<typeof return__READ_OPTION_THEME>;\n\n\n\nexport const name__DECIDE_THEME: string = `status/DECIDE_THEME`;    \n\nexport const return__DECIDE_THEME = () => {    \n    return {\n        type: name__DECIDE_THEME\n    }\n};\n\nexport type type__DECIDE_THEME = ReturnType<typeof return__DECIDE_THEME>;\n\n\n\nexport const name__READ_LANGUAGE: string = `status/READ_LANGUAGE`;    \n\nexport const return__READ_LANGUAGE = () => {    \n    return {\n        type: name__READ_LANGUAGE\n    }\n};\n\nexport type type__READ_LANGUAGE = ReturnType<typeof return__READ_LANGUAGE>;\n\n\n"]},"metadata":{},"sourceType":"module"}