{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport Cookies from 'js-cookie';\nimport * as config from 'config';\nimport * as actionsStatus from \"store/actions/status\";\nimport * as actionsNotification from \"store/actions/notification\";\n\nconst requestLogIn = bodyRequest => {\n  return axios.post(`${config.URL_BACK}/auth/log-in`, bodyRequest, {\n    withCredentials: true\n  }).then(response => {\n    //console.log(response)\n    return response;\n  }).catch(error => {\n    //console.log(error.response)\n    return error.response;\n  });\n};\n\nfunction* logIn(action) {\n  try {\n    if (action.payload.email === \"\") {\n      console.log('type email address'); //addDeleteNotification(\"auth01\", language);\n    } else if (!/\\S+@\\S+\\.\\S+/.test(action.payload.email)) {\n      console.log('type valid email address'); //addDeleteNotification(\"auth021\", language);\n    } else if (action.payload.password === \"\") {\n      console.log('type password'); //addDeleteNotification(\"auth03\", language);\n    } else {\n      yield put(actionsStatus.return__REPLACE({\n        listKey: ['ready', 'user'],\n        replacement: false\n      }));\n      yield put(actionsStatus.return__REPLACE({\n        listKey: ['loading', 'user'],\n        replacement: true\n      }));\n      const bodyRequest = {\n        email: action.payload.email,\n        password: action.payload.password\n      };\n      const res = yield call(requestLogIn, bodyRequest);\n      console.log(res);\n      const codeSituation = res.data.codeSituation;\n\n      if (codeSituation === 'LogIn_Succeeded') {\n        //Cookies.remove('logged');\n        console.log(res.data.payload); // const user = res.data.payload;\n\n        Cookies.set('logged_in', 'yes', {\n          expires: 7,\n          path: '/'\n        });\n        yield put(actionsStatus.return__REPLACE({\n          listKey: ['loading', 'user'],\n          replacement: false\n        }));\n        yield put(actionsStatus.return__REPLACE({\n          listKey: ['ready', 'user'],\n          replacement: true\n        }));\n      } else {\n        console.log(codeSituation); // SignUp_UnknownError, SignUp_DuplicateEmail\n\n        yield put(actionsNotification.return__ADD_CODE_SITUATION_SPECIAL({\n          codeSituation: codeSituation\n        }));\n        yield put(actionsStatus.return__REPLACE({\n          listKey: ['loading', 'user'],\n          replacement: false\n        }));\n        yield put(actionsStatus.return__REPLACE({\n          listKey: ['ready', 'user'],\n          replacement: false\n        }));\n        Cookies.remove('logged_in');\n      }\n    } // higher else\n    // go to home\n\n  } catch (error) {\n    console.log(error);\n    console.log('log in has been failed');\n    yield put(actionsNotification.return__ADD_CODE_SITUATION_SPECIAL({\n      codeSituation: 'LogIn_UnknownError'\n    }));\n    yield put(actionsStatus.return__REPLACE({\n      listKey: ['loading', 'user'],\n      replacement: false\n    }));\n    yield put(actionsStatus.return__REPLACE({\n      listKey: ['ready', 'user'],\n      replacement: false\n    })); // clear inputs\n  }\n}\n\nexport default logIn;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/auth/logIn.ts"],"names":["call","put","axios","Cookies","config","actionsStatus","actionsNotification","requestLogIn","bodyRequest","post","URL_BACK","withCredentials","then","response","catch","error","logIn","action","payload","email","console","log","test","password","return__REPLACE","listKey","replacement","res","codeSituation","data","set","expires","path","return__ADD_CODE_SITUATION_SPECIAL","remove"],"mappings":"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","sourcesContent":["import { call, spawn, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport queryString from 'query-string';\n\nimport Cookies from 'js-cookie';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as config from 'config';\n\nimport * as actionsStatus from \"store/actions/status\";\nimport * as actionsAuth from \"store/actions/auth\";\nimport * as actionsNotification from \"store/actions/notification\";\n\n\n\ninterface BodyRequest {\n    email: string;\n    password: string;\n}\n\nconst requestLogIn = (bodyRequest: BodyRequest) => {\n    \n    return axios.post(`${config.URL_BACK}/auth/log-in`, bodyRequest, {withCredentials: true})\n    \n        .then(response => { \n        \t//console.log(response)\n        \treturn response;\n        })\n        .catch(error => {\n            //console.log(error.response)\n            return error.response;\n        });\n};\n\n\nfunction* logIn(action: actionsAuth.type__LOG_IN) {\n    try {\n        \n        if (action.payload.email === \"\") {\n            console.log('type email address');\n            //addDeleteNotification(\"auth01\", language);\n        }\n        else if ( !(/\\S+@\\S+\\.\\S+/).test(action.payload.email) ){\n            console.log('type valid email address');\n            //addDeleteNotification(\"auth021\", language);\n        }\n        \n        else if (action.payload.password === \"\") {\n            console.log('type password');\n            //addDeleteNotification(\"auth03\", language);\n        }\n        \n        \n        else {\n            \n            yield put( actionsStatus.return__REPLACE({\n                listKey: ['ready', 'user'],\n                replacement: false\n            }) );\n            \n            yield put( actionsStatus.return__REPLACE({\n                listKey: ['loading', 'user'],\n                replacement: true\n            }) );\n                \n            \n            const bodyRequest = {\n                email: action.payload.email, \n                password: action.payload.password\n            };\n        \n    \n            const res = yield call( requestLogIn, bodyRequest );\n            console.log(res);\n            \n            const codeSituation = res.data.codeSituation;\n            \n            if (codeSituation === 'LogIn_Succeeded') {\n                \n                //Cookies.remove('logged');\n                console.log(res.data.payload)\n                // const user = res.data.payload;\n                Cookies.set('logged_in', 'yes', { expires: 7, path: '/' });  \n                \n                yield put( actionsStatus.return__REPLACE({\n                    listKey: ['loading', 'user'],\n                    replacement: false\n                }) );\n                \n                yield put( actionsStatus.return__REPLACE({\n                    listKey: ['ready', 'user'],\n                    replacement: true\n                }) );\n            \n            }\n            else {\n                \n                console.log(codeSituation);\n                \n                // SignUp_UnknownError, SignUp_DuplicateEmail\n                yield put( actionsNotification.return__ADD_CODE_SITUATION_SPECIAL({\n                    codeSituation: codeSituation\n                }) );\n                \n                \n                yield put( actionsStatus.return__REPLACE({\n                    listKey: ['loading', 'user'],\n                    replacement: false\n                }) );\n                \n                yield put( actionsStatus.return__REPLACE({\n                    listKey: ['ready', 'user'],\n                    replacement: false\n                }) );\n                \n                Cookies.remove('logged_in')\n            }\n            \n            \n        } // higher else\n    \n\n    // go to home\n        \n        \n    } catch (error) {\n        \n        console.log(error);\n        console.log('log in has been failed');\n        \n        yield put( actionsNotification.return__ADD_CODE_SITUATION_SPECIAL({\n            codeSituation: 'LogIn_UnknownError'\n        }) );\n        \n        \n        yield put( actionsStatus.return__REPLACE({\n            listKey: ['loading', 'user'],\n            replacement: false\n        }) );\n        \n        yield put( actionsStatus.return__REPLACE({\n            listKey: ['ready', 'user'],\n            replacement: false\n        }) );\n        // clear inputs\n    }\n}\n\nexport default logIn;\n"]},"metadata":{},"sourceType":"module"}