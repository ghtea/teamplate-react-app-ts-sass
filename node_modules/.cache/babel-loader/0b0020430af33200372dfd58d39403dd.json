{"ast":null,"code":"import { put, select } from \"redux-saga/effects\";\nimport * as actionsStatus from \"store/actions/status\";\n\nfunction* decideTheme(action) {\n  const optionThemeCurrent = yield select(state => state.status.current.theme.option);\n\n  if (optionThemeCurrent === 'light') {\n    yield put(actionsStatus.return__REPLACE({\n      listKey: ['current', 'theme', 'name'],\n      replacement: 'themeLight'\n    }));\n  } else if (optionThemeCurrent === 'dark') {\n    yield put(actionsStatus.return__REPLACE({\n      listKey: ['current', 'theme', 'name'],\n      replacement: 'themeDark'\n    }));\n  } else if (optionThemeCurrent === 'auto') {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      console.log('browser is dark mode');\n      yield put(actionsStatus.return__REPLACE({\n        listKey: ['current', 'theme', 'name'],\n        replacement: 'themeDark'\n      }));\n    } else {\n      console.log('browser is light mode');\n      yield put(actionsStatus.return__REPLACE({\n        listKey: ['current', 'theme', 'name'],\n        replacement: 'themeLight'\n      }));\n    }\n  }\n}\n\nexport default decideTheme;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/status/decideTheme.ts"],"names":["put","select","actionsStatus","decideTheme","action","optionThemeCurrent","state","status","current","theme","option","return__REPLACE","listKey","replacement","window","matchMedia","matches","console","log"],"mappings":"AAAA,SAAsBA,GAAtB,EAAsCC,MAAtC,QAAoD,oBAApD;AAMA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;AAMA,UAAUC,WAAV,CAAsBC,MAAtB,EAAqE;AAEjE,QAAMC,kBAAyB,GAAI,MAAMJ,MAAM,CAAGK,KAAD,IAAqBA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBC,KAArB,CAA2BC,MAAlD,CAA/C;;AAEA,MAAKL,kBAAkB,KAAK,OAA5B,EAAsC;AAClC,UAAML,GAAG,CAAEE,aAAa,CAACS,eAAd,CAA8B;AACrCC,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,CAD4B;AAErCC,MAAAA,WAAW,EAAE;AAFwB,KAA9B,CAAF,CAAT;AAIH,GALD,MAMK,IAAKR,kBAAkB,KAAK,MAA5B,EAAqC;AACtC,UAAML,GAAG,CAAEE,aAAa,CAACS,eAAd,CAA8B;AACrCC,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,CAD4B;AAErCC,MAAAA,WAAW,EAAE;AAFwB,KAA9B,CAAF,CAAT;AAIH,GALI,MAMA,IAAKR,kBAAkB,KAAK,MAA5B,EAAoC;AACrC,QAAIS,MAAM,CAACC,UAAP,IAAqBD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAA3E,EAAoF;AAChFC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,YAAMlB,GAAG,CAAEE,aAAa,CAACS,eAAd,CAA8B;AACrCC,QAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,CAD4B;AAErCC,QAAAA,WAAW,EAAE;AAFwB,OAA9B,CAAF,CAAT;AAIH,KAND,MAOK;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,YAAMlB,GAAG,CAAEE,aAAa,CAACS,eAAd,CAA8B;AACrCC,QAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,CAD4B;AAErCC,QAAAA,WAAW,EAAE;AAFwB,OAA9B,CAAF,CAAT;AAIH;AACJ;AACJ;;AAED,eAAeV,WAAf","sourcesContent":["import { call, spawn, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport Cookies from 'js-cookie';\n\nimport instanceI18n from 'language/i18n';\n\nimport * as actionsStatus from \"store/actions/status\";\nimport {StateRoot} from 'store/reducers';\n\n\n\n\nfunction* decideTheme(action: actionsStatus.type__READ_OPTION_THEME) {\n    \n    const optionThemeCurrent:string =  yield select( (state:StateRoot) => state.status.current.theme.option ); \n        \n    if ( optionThemeCurrent === 'light' ) {\n        yield put( actionsStatus.return__REPLACE({\n            listKey: ['current', 'theme', 'name'],\n            replacement: 'themeLight'\n        }) );\n    }\n    else if ( optionThemeCurrent === 'dark' ) {\n        yield put( actionsStatus.return__REPLACE({\n            listKey: ['current', 'theme', 'name'],\n            replacement: 'themeDark'\n        }) );\n    }\n    else if ( optionThemeCurrent === 'auto' ){\n        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n            console.log('browser is dark mode');\n            yield put( actionsStatus.return__REPLACE({\n                listKey: ['current', 'theme', 'name'],\n                replacement: 'themeDark'\n            }) );\n        }\n        else {\n            console.log('browser is light mode');\n            yield put( actionsStatus.return__REPLACE({\n                listKey: ['current', 'theme', 'name'],\n                replacement: 'themeLight'\n            }) );\n        }\n    }\n}\n\nexport default decideTheme;\n"]},"metadata":{},"sourceType":"module"}