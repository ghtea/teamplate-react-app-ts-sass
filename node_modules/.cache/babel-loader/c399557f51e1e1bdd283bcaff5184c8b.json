{"ast":null,"code":"import { put } from \"redux-saga/effects\";\nimport store from 'tools/vanilla/store';\nimport * as actionsStatus from \"store/actions/status\";\n\n// action: actionsStatus.type__READ_LANGUAGE\nfunction* readLanguage() {\n  const languageI18next = store.get('i18nextLng');\n\n  if (languageI18next !== undefined) {\n    // https://github.com/ladjs/i18n-locales     list of codes\n    let replacement = '';\n\n    if (languageI18next === 'ko' || 'ko-KR') {\n      replacement = 'ko';\n    } else {\n      replacement = 'en';\n    }\n\n    yield put(actionsStatus.return__REPLACE({\n      listKey: ['current', 'language'],\n      replacement: replacement\n    }));\n  }\n\n  ;\n}\n\nexport default readLanguage;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/status/readLanguage.ts"],"names":["put","store","actionsStatus","readLanguage","languageI18next","get","undefined","replacement","return__REPLACE","listKey"],"mappings":"AAAA,SAAsBA,GAAtB,QAAoD,oBAApD;AAGA,OAAOC,KAAP,MAAkB,qBAAlB;AAIA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;AAIA;AAEA,UAAUC,YAAV,GAAyB;AAGrB,QAAMC,eAAsB,GAAGH,KAAK,CAACI,GAAN,CAAU,YAAV,CAA/B;;AAEA,MAAID,eAAe,KAAKE,SAAxB,EAAkC;AAEhC;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAIH,eAAe,KAAK,IAApB,IAA4B,OAAhC,EAAwC;AACtCG,MAAAA,WAAW,GAAG,IAAd;AACD,KAFD,MAGK;AACHA,MAAAA,WAAW,GAAG,IAAd;AACD;;AAED,UAAMP,GAAG,CAAEE,aAAa,CAACM,eAAd,CAA8B;AACvCC,MAAAA,OAAO,EAAC,CAAC,SAAD,EAAY,UAAZ,CAD+B;AAEvCF,MAAAA,WAAW,EAAEA;AAF0B,KAA9B,CAAF,CAAT;AAID;;AAAA;AAGJ;;AAED,eAAeJ,YAAf","sourcesContent":["import { call, spawn, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport Cookies from 'js-cookie';\nimport store from 'tools/vanilla/store';\n\nimport instanceI18n from 'language/i18n';\n\nimport * as actionsStatus from \"store/actions/status\";\nimport {StateRoot} from 'store/reducers';\n\n\n// action: actionsStatus.type__READ_LANGUAGE\n\nfunction* readLanguage() {\n    \n    \n    const languageI18next:string = store.get('i18nextLng');\n    \n    if (languageI18next !== undefined){\n      \n      // https://github.com/ladjs/i18n-locales     list of codes\n      let replacement = '';\n      if (languageI18next === 'ko' || 'ko-KR'){\n        replacement = 'ko';\n      }\n      else {\n        replacement = 'en';\n      }\n      \n      yield put( actionsStatus.return__REPLACE({\n        listKey:['current', 'language'],\n        replacement: replacement\n      }))\n    };\n    \n        \n}\n\nexport default readLanguage;\n"]},"metadata":{},"sourceType":"module"}