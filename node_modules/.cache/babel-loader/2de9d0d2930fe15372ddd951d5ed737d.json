{"ast":null,"code":"import { put, select } from \"redux-saga/effects\";\nimport * as actionsNotification from \"store/actions/notification\";\n\nfunction* deleteCodeSituationSpecial(action) {\n  const listCodeSituationSpecialPrevious = yield select(state => state.notification.listCodeSituationSpecial);\n  let listCodeSituationSpecialNew = listCodeSituationSpecialPrevious;\n\n  if (action.payload.codeSituation) {\n    listCodeSituationSpecialNew = listCodeSituationSpecialPrevious.filter(code => code !== action.payload.codeSituation);\n  } else if (action.payload.regex) {\n    listCodeSituationSpecialNew = listCodeSituationSpecialPrevious.filter(code => {\n      var _action$payload$regex;\n\n      return (_action$payload$regex = action.payload.regex) === null || _action$payload$regex === void 0 ? void 0 : _action$payload$regex.test(code);\n    });\n  }\n\n  yield put(actionsNotification.return__REPLACE({\n    listKey: ['listCodeSituationSpecial'],\n    replacement: listCodeSituationSpecialNew\n  }));\n}\n\nexport default deleteCodeSituationSpecial;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/notification/deleteCodeSituationSpecial.ts"],"names":["put","select","actionsNotification","deleteCodeSituationSpecial","action","listCodeSituationSpecialPrevious","state","notification","listCodeSituationSpecial","listCodeSituationSpecialNew","payload","codeSituation","filter","code","regex","test","return__REPLACE","listKey","replacement"],"mappings":"AAAA,SAAgBA,GAAhB,EAAgCC,MAAhC,QAA8C,oBAA9C;AAEA,OAAO,KAAKC,mBAAZ,MAAqC,4BAArC;;AAMA,UAAUC,0BAAV,CAAqCC,MAArC,EAAsG;AAElG,QAAMC,gCAA0C,GAAI,MAAMJ,MAAM,CAAGK,KAAD,IAAqBA,KAAK,CAACC,YAAN,CAAmBC,wBAA1C,CAAhE;AAGA,MAAIC,2BAAqC,GAAGJ,gCAA5C;;AAEA,MAAID,MAAM,CAACM,OAAP,CAAeC,aAAnB,EAAiC;AAC/BF,IAAAA,2BAA2B,GAAGJ,gCAAgC,CAACO,MAAjC,CAAwCC,IAAI,IAAIA,IAAI,KAAKT,MAAM,CAACM,OAAP,CAAeC,aAAxE,CAA9B;AACD,GAFD,MAIK,IAAIP,MAAM,CAACM,OAAP,CAAeI,KAAnB,EAA0B;AAC7BL,IAAAA,2BAA2B,GAAGJ,gCAAgC,CAACO,MAAjC,CAAwCC,IAAI;AAAA;;AAAA,sCAAIT,MAAM,CAACM,OAAP,CAAeI,KAAnB,0DAAI,sBAAsBC,IAAtB,CAA2BF,IAA3B,CAAJ;AAAA,KAA5C,CAA9B;AACD;;AAED,QAAMb,GAAG,CAAEE,mBAAmB,CAACc,eAApB,CAAoC;AAC3CC,IAAAA,OAAO,EAAE,CAAC,0BAAD,CADkC;AAE3CC,IAAAA,WAAW,EAAET;AAF8B,GAApC,CAAF,CAAT;AAKH;;AAED,eAAeN,0BAAf","sourcesContent":["import { delay, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport * as actionsNotification from \"store/actions/notification\";\nimport {StateRoot} from 'store/reducers';\n\nimport catalogSituation, {KindSituation} from 'language/catalogSituation';\n\n\nfunction* deleteCodeSituationSpecial(action: actionsNotification.type__DELETE_CODE_SITUATION_SPECIAL) {\n    \n    const listCodeSituationSpecialPrevious: string[] =  yield select( (state:StateRoot) => state.notification.listCodeSituationSpecial ); \n      \n    \n    let listCodeSituationSpecialNew: string[] = listCodeSituationSpecialPrevious;\n    \n    if (action.payload.codeSituation){\n      listCodeSituationSpecialNew = listCodeSituationSpecialPrevious.filter(code => code !== action.payload.codeSituation);\n    }\n    \n    else if (action.payload.regex ){\n      listCodeSituationSpecialNew = listCodeSituationSpecialPrevious.filter(code => action.payload.regex?.test(code));\n    }\n    \n    yield put( actionsNotification.return__REPLACE({\n        listKey: ['listCodeSituationSpecial'],\n        replacement: listCodeSituationSpecialNew\n    }) );\n    \n}\n\nexport default deleteCodeSituationSpecial;\n"]},"metadata":{},"sourceType":"module"}