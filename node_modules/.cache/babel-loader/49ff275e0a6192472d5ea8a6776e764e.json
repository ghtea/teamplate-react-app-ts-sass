{"ast":null,"code":"import { put, select } from \"redux-saga/effects\";\nimport * as actionsNotification from \"store/actions/notification\";\n\n//import catalogSituation from 'language/catalogSituation';\nfunction* deleteBanner(action) {\n  const listBannerPrevious = yield select(state => state.notification.listBanner);\n  const id = action.payload.id;\n  const listBannerNew = listBannerPrevious.filter(banner => banner.id !== id);\n  yield put(actionsNotification.return__REPLACE({\n    listKey: ['listBanner'],\n    replacement: listBannerNew\n  }));\n}\n\nexport default deleteBanner;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/notification/deleteBanner.ts"],"names":["put","select","actionsNotification","deleteBanner","action","listBannerPrevious","state","notification","listBanner","id","payload","listBannerNew","filter","banner","return__REPLACE","listKey","replacement"],"mappings":"AAAA,SAAsBA,GAAtB,EAAsCC,MAAtC,QAAoD,oBAApD;AAEA,OAAO,KAAKC,mBAAZ,MAAqC,4BAArC;;AAOA;AAGA,UAAUC,YAAV,CAAuBC,MAAvB,EAAwE;AAEpE,QAAMC,kBAA4B,GAAI,MAAMJ,MAAM,CAAGK,KAAD,IAAqBA,KAAK,CAACC,YAAN,CAAmBC,UAA1C,CAAlD;AAEA,QAAMC,EAAU,GAAGL,MAAM,CAACM,OAAP,CAAeD,EAAlC;AAEA,QAAME,aAAa,GAAGN,kBAAkB,CAACO,MAAnB,CAA0BC,MAAM,IAAIA,MAAM,CAACJ,EAAP,KAAcA,EAAlD,CAAtB;AAGA,QAAMT,GAAG,CAAEE,mBAAmB,CAACY,eAApB,CAAoC;AAC3CC,IAAAA,OAAO,EAAE,CAAC,YAAD,CADkC;AAE3CC,IAAAA,WAAW,EAAEL;AAF8B,GAApC,CAAF,CAAT;AAKH;;AAED,eAAeR,YAAf","sourcesContent":["import { call, spawn, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport * as actionsNotification from \"store/actions/notification\";\nimport {Banner} from \"store/reducers/notification\";\nimport {StateRoot} from 'store/reducers';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport instanceI18n from 'language/i18n';\n//import catalogSituation from 'language/catalogSituation';\n\n\nfunction* deleteBanner(action: actionsNotification.type__DELETE_BANNER) {\n    \n    const listBannerPrevious: Banner[] =  yield select( (state:StateRoot) => state.notification.listBanner ); \n        \n    const id: string = action.payload.id;\n    \n    const listBannerNew = listBannerPrevious.filter(banner => banner.id !== id);\n\n    \n    yield put( actionsNotification.return__REPLACE({\n        listKey: ['listBanner'],\n        replacement: listBannerNew\n    }) );\n    \n}\n\nexport default deleteBanner;\n\n"]},"metadata":{},"sourceType":"module"}