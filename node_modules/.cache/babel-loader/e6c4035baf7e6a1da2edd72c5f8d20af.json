{"ast":null,"code":"var _jsxFileName = \"/workspace/teamplate-react-app-ts-sass/src/components/Nav.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Nav1 from \"./Nav/Nav1\";\nimport Nav2 from \"./Nav/Nav2\";\n\nfunction Nav({}) {\n  _s();\n\n  let location = useLocation();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Nav2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Nav, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Nav;\nexport default Nav;\n/*\n\n const reducer = (resultCurrent:boolean, pageCurrent:string):boolean => (new RegExp(`^${pageCurrent}`)).test(location.pathname) ? true : false;\n\n  \n  const isFullPage: boolean = listFullPage.reduce(reducer, false)\n  \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/components/Nav.tsx"],"names":["React","useLocation","Nav1","Nav2","Nav","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAAqBC,WAArB,QAAwC,kBAAxC;AAOA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAOA,SAASC,GAAT,CAAa,EAAb,EAA2B;AAAA;;AAEzB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AAGA,sBACE,uDACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD;;GAZQG,G;UAEQH,W;;;KAFRG,G;AAcT,eAAeA,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport styled, {ThemeProvider }  from 'styled-components';\n\nimport {useSelector, useDispatch} from \"react-redux\";\nimport * as actionsStatus from 'store/actions/status';\n\nimport Nav1 from \"./Nav/Nav1\";\nimport Nav2 from \"./Nav/Nav2\";\n\nimport * as Styled from './Nav_Styled';\n\n// TS  https://velog.io/@velopert/create-typescript-react-component\ntype PropsNav = {};\n\nfunction Nav({}: PropsNav) {\n  \n  let location = useLocation();\n  \n  \n  return (\n    <>\n      <Nav1/>\n      <Nav2/>\n    </>\n  )\n  \n}\n\nexport default Nav;\n\n\n/*\n\n const reducer = (resultCurrent:boolean, pageCurrent:string):boolean => (new RegExp(`^${pageCurrent}`)).test(location.pathname) ? true : false;\n\n  \n  const isFullPage: boolean = listFullPage.reduce(reducer, false)\n  \n*/"]},"metadata":{},"sourceType":"module"}