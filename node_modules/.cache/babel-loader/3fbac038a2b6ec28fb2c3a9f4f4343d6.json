{"ast":null,"code":"import { put, select } from \"redux-saga/effects\";\nimport * as actionsNotification from \"store/actions/notification\";\n\nfunction* addCodeSituationSpecial(action) {\n  const listCodeSituationSpecialPrevious = yield select(state => state.notification.listCodeSituationSpecial);\n  const listCodeSituationSpecialNew = [action.payload.codeSituation, ...listCodeSituationSpecialPrevious];\n  yield put(actionsNotification.return__REPLACE({\n    listKey: ['listCodeSituationSpecial'],\n    replacement: listCodeSituationSpecialNew\n  }));\n}\n\nexport default addCodeSituationSpecial;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/store/sagas/notification/addCodeSituationSpecial.ts"],"names":["put","select","actionsNotification","addCodeSituationSpecial","action","listCodeSituationSpecialPrevious","state","notification","listCodeSituationSpecial","listCodeSituationSpecialNew","payload","codeSituation","return__REPLACE","listKey","replacement"],"mappings":"AAAA,SAAgBA,GAAhB,EAAgCC,MAAhC,QAA8C,oBAA9C;AAEA,OAAO,KAAKC,mBAAZ,MAAqC,4BAArC;;AAMA,UAAUC,uBAAV,CAAkCC,MAAlC,EAAgG;AAE5F,QAAMC,gCAA0C,GAAI,MAAMJ,MAAM,CAAGK,KAAD,IAAqBA,KAAK,CAACC,YAAN,CAAmBC,wBAA1C,CAAhE;AAGA,QAAMC,2BAA2B,GAAG,CAACL,MAAM,CAACM,OAAP,CAAeC,aAAhB,EAA+B,GAAGN,gCAAlC,CAApC;AAGA,QAAML,GAAG,CAAEE,mBAAmB,CAACU,eAApB,CAAoC;AAC3CC,IAAAA,OAAO,EAAE,CAAC,0BAAD,CADkC;AAE3CC,IAAAA,WAAW,EAAEL;AAF8B,GAApC,CAAF,CAAT;AAKH;;AAED,eAAeN,uBAAf","sourcesContent":["import { delay, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport * as actionsNotification from \"store/actions/notification\";\nimport {StateRoot} from 'store/reducers';\n\nimport catalogSituation, {KindSituation} from 'language/catalogSituation';\n\n\nfunction* addCodeSituationSpecial(action: actionsNotification.type__ADD_CODE_SITUATION_SPECIAL) {\n    \n    const listCodeSituationSpecialPrevious: string[] =  yield select( (state:StateRoot) => state.notification.listCodeSituationSpecial ); \n      \n    \n    const listCodeSituationSpecialNew = [action.payload.codeSituation, ...listCodeSituationSpecialPrevious];\n        \n        \n    yield put( actionsNotification.return__REPLACE({\n        listKey: ['listCodeSituationSpecial'],\n        replacement: listCodeSituationSpecialNew\n    }) );\n    \n}\n\nexport default addCodeSituationSpecial;\n"]},"metadata":{},"sourceType":"module"}