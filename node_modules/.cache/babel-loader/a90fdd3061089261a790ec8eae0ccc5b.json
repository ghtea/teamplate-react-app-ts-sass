{"ast":null,"code":"var _jsxFileName = \"/workspace/teamplate-react-app-ts-sass/src/components/Modal/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useTranslationTyped from 'tools/hooks/useTranslationTyped';\nimport Cookies from 'js-cookie';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actionsStatus from 'store/actions/status';\nimport IconX from 'svgs/basic/IconX';\nimport * as Styled from './Setting_Styled';\n\nfunction Setting({}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const languageCurrent = useSelector(state => state['status']['current']['language']);\n  const optionThemeCurrent = useSelector(state => state['status']['current']['theme']['option']);\n  const {\n    t\n  } = useTranslationTyped();\n  const onClick_HideSetting = useCallback(() => {\n    dispatch(actionsStatus.return__REPLACE({\n      listKey: ['showing', 'modal', 'setting'],\n      replacement: false\n    }));\n  }, []);\n  const onClick_LinkInsideApp = useCallback((event, destination) => {\n    history.push(destination);\n  }, [history]);\n  const onClick_ChangeOptionTheme = useCallback(replacement => {\n    dispatch(actionsStatus.return__REPLACE({\n      listKey: ['current', 'theme', 'option'],\n      replacement: replacement\n    }));\n    Cookies.set('optionTheme', replacement, {\n      expires: 14\n    });\n  }, []);\n  const onClick_ChangeLanguage = useCallback(replacement => {\n    dispatch(actionsStatus.return__CHANGE_LANGUAGE({\n      replacement: replacement\n    }));\n  }, []);\n  return /*#__PURE__*/React.createElement(Styled.Div__Setting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Div__Setting_Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \" \", t('Modal', 'Setting', 'Title'), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => onClick_HideSetting(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconX, {\n    listKeyTheme: ['colors', 'Modal', 'setting_header___icon'],\n    width: '24px',\n    height: '24px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Styled.Div__Setting_Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Div__Setting_Content_Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \" \", t('Modal', 'Setting', 'Theme'), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Button__Option, {\n    onClick: () => onClick_ChangeOptionTheme('auto'),\n    active: optionThemeCurrent === 'auto',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \" auto\"), /*#__PURE__*/React.createElement(Styled.Button__Option, {\n    onClick: () => onClick_ChangeOptionTheme('light'),\n    active: optionThemeCurrent === 'light',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \" light\"), /*#__PURE__*/React.createElement(Styled.Button__Option, {\n    onClick: () => onClick_ChangeOptionTheme('dark'),\n    active: optionThemeCurrent === 'dark',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \" dark\"))), /*#__PURE__*/React.createElement(Styled.Div__Setting_Content_Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \" \", t('Modal', 'Setting', 'Language'), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Styled.Button__Option, {\n    onClick: () => onClick_ChangeLanguage('en'),\n    active: languageCurrent === 'en',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \" English\"), /*#__PURE__*/React.createElement(Styled.Button__Option, {\n    onClick: () => onClick_ChangeLanguage('ko'),\n    active: languageCurrent === 'ko',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" \\uD55C\\uAD6D\\uC5B4\")))));\n}\n\n_s(Setting, \"4ngnQdb0VEdGijXEUqv4w/13bNA=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useTranslationTyped];\n});\n\n_c = Setting;\nSetting.defaultProps = {};\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/components/Modal/Setting.tsx"],"names":["React","useCallback","useHistory","useTranslationTyped","Cookies","useSelector","useDispatch","actionsStatus","IconX","Styled","Setting","dispatch","history","languageCurrent","state","optionThemeCurrent","t","onClick_HideSetting","return__REPLACE","listKey","replacement","onClick_LinkInsideApp","event","destination","push","onClick_ChangeOptionTheme","set","expires","onClick_ChangeLanguage","return__CHANGE_LANGUAGE","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport useTranslationTyped from 'tools/hooks/useTranslationTyped'\nimport Cookies from 'js-cookie';\n\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {StateRoot} from 'store/reducers';\nimport * as actionsStatus from 'store/actions/status';\n\n\nimport IconX from 'svgs/basic/IconX';\n\nimport * as Styled from './Setting_Styled';\n\n\ntype PropsSetting = {};\n\nfunction Setting({}: PropsSetting) {\n  \n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const languageCurrent:string = useSelector((state: StateRoot) => state['status']['current']['language']);\n  const optionThemeCurrent:string = useSelector((state: StateRoot) => state['status']['current']['theme']['option']);\n\n  const { t } = useTranslationTyped();\n  \n  const onClick_HideSetting = useCallback(\n    () => {\n      dispatch(actionsStatus.return__REPLACE({ \n        listKey: ['showing', 'modal', 'setting'],\n        replacement: false\n      }))\n    },[]\n  );\n  \n  const onClick_LinkInsideApp = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement> | React.MouseEvent<HTMLButtonElement>, destination:string) => {\n      history.push(destination);\n    },[history]\n  );\n  \n  \n  const onClick_ChangeOptionTheme = useCallback(\n    (replacement:string) => {\n      dispatch(actionsStatus.return__REPLACE({\n        listKey: ['current', 'theme', 'option'],\n        replacement: replacement\n      }) );\n      Cookies.set('optionTheme', replacement, { expires: 14});\n    }, []\n  );\n  \n  const onClick_ChangeLanguage = useCallback(\n    (replacement:string) => {\n      dispatch(actionsStatus.return__CHANGE_LANGUAGE({\n        replacement: replacement\n      }) )\n    }, []\n  );\n  \n  \n  return (\n    <Styled.Div__Setting>\n      \n      <Styled.Div__Setting_Header>\n        <div> {t('Modal', 'Setting', 'Title')} </div>\n        <div\n          onClick={()=>onClick_HideSetting()}\n        > \n          <IconX\n            listKeyTheme={['colors', 'Modal', 'setting_header___icon']}\n            width={'24px'}\n            height={'24px'}\n          />\n        </div>\n      </Styled.Div__Setting_Header>\n      \n      \n      <Styled.Div__Setting_Content>\n        \n        <Styled.Div__Setting_Content_Section>\n          <div> {t('Modal', 'Setting', 'Theme')} </div>\n          <div>\n            <Styled.Button__Option \n              onClick={()=>onClick_ChangeOptionTheme('auto')}\n              active={optionThemeCurrent === 'auto'}\n            > auto \n            </Styled.Button__Option>\n            <Styled.Button__Option \n              onClick={()=>onClick_ChangeOptionTheme('light')}\n              active={optionThemeCurrent === 'light'}\n            > light \n            </Styled.Button__Option>\n            <Styled.Button__Option \n              onClick={()=>onClick_ChangeOptionTheme('dark')}\n              active={optionThemeCurrent === 'dark'}\n            > dark \n            </Styled.Button__Option>\n          </div>\n        </Styled.Div__Setting_Content_Section>\n        \n        <Styled.Div__Setting_Content_Section>\n          <div> {t('Modal', 'Setting', 'Language')} </div>\n          <div>\n            <Styled.Button__Option \n              onClick={()=>onClick_ChangeLanguage('en')}\n              active={languageCurrent === 'en'}\n            > English \n            </Styled.Button__Option>\n            <Styled.Button__Option \n              onClick={()=>onClick_ChangeLanguage('ko')}\n              active={languageCurrent === 'ko'}\n            > 한국어 \n            </Styled.Button__Option>\n          </div>\n        </Styled.Div__Setting_Content_Section>\n        \n      </Styled.Div__Setting_Content>\n        \n        \n    </Styled.Div__Setting>\n  );\n}\n\nSetting.defaultProps = {};\n\nexport default Setting;\n\n\n"]},"metadata":{},"sourceType":"module"}