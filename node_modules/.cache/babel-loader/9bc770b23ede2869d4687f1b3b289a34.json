{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEn from './translation/en.json';\nimport translationKo from './translation/ko.json';\nconst resource = {\n  en: {\n    translation: translationEn\n  },\n  ko: {\n    translation: translationKo\n  }\n};\nconst optionDetection = {\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'],\n  // languages to not persist (cookie, localStorage)\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n  // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\n  cookieOptions: {\n    path: '/',\n    sameSite: 'strict'\n  }\n};\nconst instanceI18n = i18n.createInstance();\ninstanceI18n.use(initReactI18next) // passes i18n down to react-i18next\n.use(LanguageDetector) // https://www.npmjs.com/package/i18next-browser-languagedetector\n.init({\n  resources: resource,\n  //lng: \"en\",\n  fallbackLng: \"en\",\n  debug: true,\n  interpolation: {\n    escapeValue: false\n  },\n  detection: optionDetection\n});\nexport default instanceI18n;","map":{"version":3,"sources":["/workspace/teamplate-react-app-ts-sass/src/language/i18n.ts"],"names":["i18n","initReactI18next","LanguageDetector","translationEn","translationKo","resource","en","translation","ko","optionDetection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","document","documentElement","cookieOptions","path","sameSite","instanceI18n","createInstance","use","init","resources","fallbackLng","debug","interpolation","escapeValue","detection"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,QAAQ,GAAI;AACdC,EAAAA,EAAE,EAAE;AACAC,IAAAA,WAAW,EAAEJ;AADb,GADU;AAIdK,EAAAA,EAAE,EAAE;AACAD,IAAAA,WAAW,EAAEH;AADb;AAJU,CAAlB;AAUA,MAAMK,eAAe,GAAG;AACtB;AACAC,EAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,QAAhB,EAA0B,cAA1B,EAA0C,gBAA1C,EAA4D,WAA5D,EAAyE,SAAzE,EAAoF,MAApF,EAA4F,WAA5F,CAFe;AAItB;AACAC,EAAAA,iBAAiB,EAAE,KALG;AAMtBC,EAAAA,YAAY,EAAE,SANQ;AAOtBC,EAAAA,kBAAkB,EAAE,YAPE;AAQtBC,EAAAA,oBAAoB,EAAE,YARA;AAStBC,EAAAA,mBAAmB,EAAE,CATC;AAUtBC,EAAAA,wBAAwB,EAAE,CAVJ;AAYtB;AACAC,EAAAA,MAAM,EAAE,CAAC,cAAD,EAAiB,QAAjB,CAbc;AActBC,EAAAA,eAAe,EAAE,CAAC,QAAD,CAdK;AAcO;AAE7B;AACAC,EAAAA,aAAa,EAAE,EAjBO;AAkBtBC,EAAAA,YAAY,EAAE,UAlBQ;AAoBtB;AACAC,EAAAA,OAAO,EAAEC,QAAQ,CAACC,eArBI;AAuBtB;AACAC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,QAAQ,EAAE;AAAvB;AAxBO,CAAxB;AA8BA,MAAMC,YAAY,GAAG3B,IAAI,CAAC4B,cAAL,EAArB;AAEAD,YAAY,CACTE,GADH,CACO5B,gBADP,EACyB;AADzB,CAEG4B,GAFH,CAEO3B,gBAFP,EAE0B;AAF1B,CAIG4B,IAJH,CAIQ;AACJC,EAAAA,SAAS,EAAE1B,QADP;AAEJ;AACA2B,EAAAA,WAAW,EAAE,IAHT;AAIJC,EAAAA,KAAK,EAAE,IAJH;AAKJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA,GALX;AAQJC,EAAAA,SAAS,EAAE3B;AARP,CAJR;AAiBA,eAAekB,YAAf","sourcesContent":["import i18n from \"i18next\"\nimport {initReactI18next} from \"react-i18next\";\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport translationEn from './translation/en.json';\nimport translationKo from './translation/ko.json';\n\nconst resource =  {\n    en: {\n        translation: translationEn\n    },\n    ko: {\n        translation: translationKo\n    }\n};\n\n\nconst optionDetection = {\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n\n  // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\n  cookieOptions: { path: '/', sameSite: 'strict' }\n};\n\n\n\n\nconst instanceI18n = i18n.createInstance();\n\ninstanceI18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(LanguageDetector)  // https://www.npmjs.com/package/i18next-browser-languagedetector\n  \n  .init({\n    resources: resource,\n    //lng: \"en\",\n    fallbackLng: \"en\",\n    debug: true,\n    interpolation: {\n      escapeValue: false\n    },\n    detection: optionDetection\n  });\n  \n \n\nexport default instanceI18n;\n\n"]},"metadata":{},"sourceType":"module"}