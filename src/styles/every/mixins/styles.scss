@import '../color-assignment.scss';
@import 'tools.scss';

@mixin color($property, $key-color-front) {

    @each $name-theme in $list-name-theme {
    .#{$name-theme} & {
        #{$property}: map-get(
            $map: $map-color-assignment, 
            $key: #{$key-color-front}___#{$name-theme}
        );
    }

  }
}


@mixin frame($property, $width, $style, $key-color-front) {

    // ex: border, border-top, outline
    @each $name-theme in $list-name-theme {
    .#{$name-theme} & {
        #{$property}: $width $style map-get(
            $map: $map-color-assignment, 
            $key: #{$key-color-front}___#{$name-theme}
        );
    }

  }
}


@mixin shadow($property, $offset-x, $offset-y, $blur-radius, $spread-radius, $key-color-front) {

    // ex: box-shadow, text-shadow ( drop-shadow 사용법은 아직 잘 모르겠다)

    @if $property == box-shadow {
        @each $name-theme in $list-name-theme {
            .#{$name-theme} & {
                #{$property}: $offset-x $offset-y $blur-radius $spread-radius map-get(
                    $map: $map-color-assignment, 
                    $key: #{$key-color-front}___#{$name-theme}
                );
            }
        }
    }

    @else if $property == text-shadow {
        @each $name-theme in $list-name-theme {
            .#{$name-theme} & {
                #{$property}: $offset-x $offset-y $blur-radius map-get(
                    $map: $map-color-assignment, 
                    $key: #{$key-color-front}___#{$name-theme}
                );
            }
        }
    }

}


// 90deg = to right 
@mixin linear-gradient($propery, $direction, $map-color-stop...) { 
    
    $list-color-stop: map-pairs($value: $map-color-stop, $order: opposite);
    
    @each $name-theme in $list-name-theme {
        .#{$name-theme} & {
            #{$property}: linear-gradient( $direction, $list-color-stop);
        }
    }
}

